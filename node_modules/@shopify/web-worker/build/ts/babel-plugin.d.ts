/// <reference types="babel__template" />
import type { PluginObj, NodePath, types as babelTypes, template as babelTemplate } from '@babel/core';
export declare const DEFAULT_PACKAGES_TO_PROCESS: {
    '@shopify/web-worker': ProcessableImport[];
    '@shopify/react-web-worker': ProcessableImport[];
};
export interface ProcessableImport {
    name: string;
    wrapperModule?: string;
}
export interface Options {
    noop?: boolean;
    packages?: {
        [key: string]: (string | ProcessableImport)[];
    };
}
interface State {
    process: Map<string, ProcessableImport[]>;
    program: NodePath<babelTypes.Program>;
    opts?: Options;
}
export default function workerBabelPlugin({ types: t, template, }: {
    types: typeof babelTypes;
    template: typeof babelTemplate;
}): PluginObj<State>;
export {};
//# sourceMappingURL=babel-plugin.d.ts.map