{"version":3,"names":["_clsx","_interopRequireDefault","require","_element","_blocks","_components","_data","_compose","_dom","_blockEdit","_blockInvalidWarning","_blockCrashWarning","_blockCrashBoundary","_blockHtml","_useBlockProps","_store","_layout","_privateBlockContext","_lockUnlock","_jsxRuntime","mergeWrapperProps","propsA","propsB","newProps","hasOwnProperty","className","clsx","style","Block","children","isHtml","props","jsx","useBlockProps","__unstableIsHtml","BlockListBlock","block","__unstableBlockSource","mode","isLocked","canRemove","clientId","isSelected","isSelectionEnabled","__unstableLayoutClassNames","layoutClassNames","name","isValid","attributes","wrapperProps","setAttributes","onReplace","onRemove","onInsertBlocksAfter","onMerge","toggleSelection","_wrapperProps","mayDisplayControls","mayDisplayParentControls","themeSupportsLayout","context","useContext","PrivateBlockContext","parentLayout","useLayout","blockEdit","default","insertBlocksAfter","undefined","mergeBlocks","__unstableParentLayout","Object","keys","length","blockEditingMode","isPreviewMode","blockType","getBlockType","getEditWrapperProps","isAligned","isSticky","includes","saveContent","serializeRawBlock","getSaveContent","jsxs","RawHTML","safeHTML","Fragment","display","apiVersion","dataAlign","restWrapperProps","updatedWrapperProps","Provider","value","fallback","applyWithDispatch","withDispatch","dispatch","ownProps","registry","updateBlockAttributes","insertBlocks","replaceBlocks","__unstableMarkLastChangeAsPersistent","moveBlocksToPosition","removeBlock","selectBlock","blockEditorStore","newAttributes","getMultiSelectedBlockClientIds","select","multiSelectedBlockClientIds","clientIds","onInsertBlocks","blocks","index","rootClientId","getBlockIndex","forward","getPreviousBlockClientId","getNextBlockClientId","getBlock","getBlockAttributes","getBlockName","getBlockOrder","getBlockRootClientId","canInsertBlockType","switchToDefaultOrRemove","defaultBlockName","getDefaultBlockName","defaultBlockType","replacement","switchToBlockType","isUnmodifiedDefaultBlock","nextBlockClientId","batch","merge","createBlock","moveFirstItemUp","_clientId","changeSelection","wrapperBlockName","wrapperBlockType","isTextualWrapper","category","targetRootClientId","blockOrder","firstClientId","isUnmodifiedBlock","every","nextRootClientId","rootAttributes","previousRootAttributes","key","previousBlockClientId","previousRootClientId","indexToSelect","initialPosition","replacementBlocks","Array","isArray","selectionEnabled","compose","withFilters","BlockListBlockProvider","selectedProps","useSelect","isBlockSelected","getBlockMode","getTemplateLock","isSectionBlock","_isSectionBlock","getBlockWithoutAttributes","canRemoveBlock","canMoveBlock","getSettings","getTemporarilyEditingAsBlocks","getBlockEditingMode","isFirstMultiSelectedBlock","hasSelectedInnerBlock","getBlocksByName","isBlockMultiSelected","isBlockSubtreeDisabled","isBlockHighlighted","__unstableIsFullySelected","__unstableSelectionHasUnmergeableBlock","isBlockBeingDragged","isDragging","__unstableHasActiveBlockOverlayActive","getSelectedBlocksInitialCaretPosition","unlock","blockWithoutAttributes","hasBlockSupport","_hasBlockSupport","getActiveBlockVariation","blocksStore","blockName","supportsLayout","hasLightBlockWrapper","previewContext","isReusable","isReusableBlock","defaultClassName","getBlockDefaultClassName","blockTitle","title","_isSelected","canMove","match","isMultiSelected","checkDeep","isAncestorOfSelectedBlock","multiple","blocksWithSameName","isInvalid","isTemporarilyEditingAsBlocks","id","blockApiVersion","isSubtreeDisabled","hasOverlay","isHighlighted","isPartiallySelected","hasChildSelected","isEditingDisabled","hasEditableOutline","originalBlockClientId","useMemo","privateContext","_default","exports","memo"],"sources":["@wordpress/block-editor/src/components/block-list/block.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { memo, RawHTML, useContext, useMemo } from '@wordpress/element';\nimport {\n\tgetBlockType,\n\tgetSaveContent,\n\tisUnmodifiedDefaultBlock,\n\tserializeRawBlock,\n\tswitchToBlockType,\n\tgetDefaultBlockName,\n\tisUnmodifiedBlock,\n\tisReusableBlock,\n\tgetBlockDefaultClassName,\n\thasBlockSupport,\n\tcreateBlock,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { withFilters } from '@wordpress/components';\nimport { withDispatch, useSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { safeHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport BlockEdit from '../block-edit';\nimport BlockInvalidWarning from './block-invalid-warning';\nimport BlockCrashWarning from './block-crash-warning';\nimport BlockCrashBoundary from './block-crash-boundary';\nimport BlockHtml from './block-html';\nimport { useBlockProps } from './use-block-props';\nimport { store as blockEditorStore } from '../../store';\nimport { useLayout } from './layout';\nimport { PrivateBlockContext } from './private-block-context';\n\nimport { unlock } from '../../lock-unlock';\n\n/**\n * Merges wrapper props with special handling for classNames and styles.\n *\n * @param {Object} propsA\n * @param {Object} propsB\n *\n * @return {Object} Merged props.\n */\nfunction mergeWrapperProps( propsA, propsB ) {\n\tconst newProps = {\n\t\t...propsA,\n\t\t...propsB,\n\t};\n\n\t// May be set to undefined, so check if the property is set!\n\tif (\n\t\tpropsA?.hasOwnProperty( 'className' ) &&\n\t\tpropsB?.hasOwnProperty( 'className' )\n\t) {\n\t\tnewProps.className = clsx( propsA.className, propsB.className );\n\t}\n\n\tif (\n\t\tpropsA?.hasOwnProperty( 'style' ) &&\n\t\tpropsB?.hasOwnProperty( 'style' )\n\t) {\n\t\tnewProps.style = { ...propsA.style, ...propsB.style };\n\t}\n\n\treturn newProps;\n}\n\nfunction Block( { children, isHtml, ...props } ) {\n\treturn (\n\t\t<div { ...useBlockProps( props, { __unstableIsHtml: isHtml } ) }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nfunction BlockListBlock( {\n\tblock: { __unstableBlockSource },\n\tmode,\n\tisLocked,\n\tcanRemove,\n\tclientId,\n\tisSelected,\n\tisSelectionEnabled,\n\tclassName,\n\t__unstableLayoutClassNames: layoutClassNames,\n\tname,\n\tisValid,\n\tattributes,\n\twrapperProps,\n\tsetAttributes,\n\tonReplace,\n\tonRemove,\n\tonInsertBlocksAfter,\n\tonMerge,\n\ttoggleSelection,\n} ) {\n\tconst {\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\tthemeSupportsLayout,\n\t\t...context\n\t} = useContext( PrivateBlockContext );\n\n\tconst parentLayout = useLayout() || {};\n\n\t// We wrap the BlockEdit component in a div that hides it when editing in\n\t// HTML mode. This allows us to render all of the ancillary pieces\n\t// (InspectorControls, etc.) which are inside `BlockEdit` but not\n\t// `BlockHTML`, even in HTML mode.\n\tlet blockEdit = (\n\t\t<BlockEdit\n\t\t\tname={ name }\n\t\t\tisSelected={ isSelected }\n\t\t\tattributes={ attributes }\n\t\t\tsetAttributes={ setAttributes }\n\t\t\tinsertBlocksAfter={ isLocked ? undefined : onInsertBlocksAfter }\n\t\t\tonReplace={ canRemove ? onReplace : undefined }\n\t\t\tonRemove={ canRemove ? onRemove : undefined }\n\t\t\tmergeBlocks={ canRemove ? onMerge : undefined }\n\t\t\tclientId={ clientId }\n\t\t\tisSelectionEnabled={ isSelectionEnabled }\n\t\t\ttoggleSelection={ toggleSelection }\n\t\t\t__unstableLayoutClassNames={ layoutClassNames }\n\t\t\t__unstableParentLayout={\n\t\t\t\tObject.keys( parentLayout ).length ? parentLayout : undefined\n\t\t\t}\n\t\t\tmayDisplayControls={ mayDisplayControls }\n\t\t\tmayDisplayParentControls={ mayDisplayParentControls }\n\t\t\tblockEditingMode={ context.blockEditingMode }\n\t\t\tisPreviewMode={ context.isPreviewMode }\n\t\t/>\n\t);\n\n\tconst blockType = getBlockType( name );\n\n\t// Determine whether the block has props to apply to the wrapper.\n\tif ( blockType?.getEditWrapperProps ) {\n\t\twrapperProps = mergeWrapperProps(\n\t\t\twrapperProps,\n\t\t\tblockType.getEditWrapperProps( attributes )\n\t\t);\n\t}\n\n\tconst isAligned =\n\t\twrapperProps &&\n\t\t!! wrapperProps[ 'data-align' ] &&\n\t\t! themeSupportsLayout;\n\n\t// Support for sticky position in classic themes with alignment wrappers.\n\n\tconst isSticky = className?.includes( 'is-position-sticky' );\n\n\t// For aligned blocks, provide a wrapper element so the block can be\n\t// positioned relative to the block column.\n\t// This is only kept for classic themes that don't support layout\n\t// Historically we used to rely on extra divs and data-align to\n\t// provide the alignments styles in the editor.\n\t// Due to the differences between frontend and backend, we migrated\n\t// to the layout feature, and we're now aligning the markup of frontend\n\t// and backend.\n\tif ( isAligned ) {\n\t\tblockEdit = (\n\t\t\t<div\n\t\t\t\tclassName={ clsx( 'wp-block', isSticky && className ) }\n\t\t\t\tdata-align={ wrapperProps[ 'data-align' ] }\n\t\t\t>\n\t\t\t\t{ blockEdit }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet block;\n\n\tif ( ! isValid ) {\n\t\tconst saveContent = __unstableBlockSource\n\t\t\t? serializeRawBlock( __unstableBlockSource )\n\t\t\t: getSaveContent( blockType, attributes );\n\n\t\tblock = (\n\t\t\t<Block className=\"has-warning\">\n\t\t\t\t<BlockInvalidWarning clientId={ clientId } />\n\t\t\t\t<RawHTML>{ safeHTML( saveContent ) }</RawHTML>\n\t\t\t</Block>\n\t\t);\n\t} else if ( mode === 'html' ) {\n\t\t// Render blockEdit so the inspector controls don't disappear.\n\t\t// See #8969.\n\t\tblock = (\n\t\t\t<>\n\t\t\t\t<div style={ { display: 'none' } }>{ blockEdit }</div>\n\t\t\t\t<Block isHtml>\n\t\t\t\t\t<BlockHtml clientId={ clientId } />\n\t\t\t\t</Block>\n\t\t\t</>\n\t\t);\n\t} else if ( blockType?.apiVersion > 1 ) {\n\t\tblock = blockEdit;\n\t} else {\n\t\tblock = <Block>{ blockEdit }</Block>;\n\t}\n\n\tconst { 'data-align': dataAlign, ...restWrapperProps } = wrapperProps ?? {};\n\tconst updatedWrapperProps = {\n\t\t...restWrapperProps,\n\t\tclassName: clsx(\n\t\t\trestWrapperProps.className,\n\t\t\tdataAlign && themeSupportsLayout && `align${ dataAlign }`,\n\t\t\t! ( dataAlign && isSticky ) && className\n\t\t),\n\t};\n\n\t// We set a new context with the adjusted and filtered wrapperProps (through\n\t// `editor.BlockListBlock`), which the `BlockListBlockProvider` did not have\n\t// access to.\n\t// Note that the context value doesn't have to be memoized in this case\n\t// because when it changes, this component will be re-rendered anyway, and\n\t// none of the consumers (BlockListBlock and useBlockProps) are memoized or\n\t// \"pure\". This is different from the public BlockEditContext, where\n\t// consumers might be memoized or \"pure\".\n\treturn (\n\t\t<PrivateBlockContext.Provider\n\t\t\tvalue={ {\n\t\t\t\twrapperProps: updatedWrapperProps,\n\t\t\t\tisAligned,\n\t\t\t\t...context,\n\t\t\t} }\n\t\t>\n\t\t\t<BlockCrashBoundary\n\t\t\t\tfallback={\n\t\t\t\t\t<Block className=\"has-warning\">\n\t\t\t\t\t\t<BlockCrashWarning />\n\t\t\t\t\t</Block>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ block }\n\t\t\t</BlockCrashBoundary>\n\t\t</PrivateBlockContext.Provider>\n\t);\n}\n\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps, registry ) => {\n\tconst {\n\t\tupdateBlockAttributes,\n\t\tinsertBlocks,\n\t\tmergeBlocks,\n\t\treplaceBlocks,\n\t\ttoggleSelection,\n\t\t__unstableMarkLastChangeAsPersistent,\n\t\tmoveBlocksToPosition,\n\t\tremoveBlock,\n\t\tselectBlock,\n\t} = dispatch( blockEditorStore );\n\n\t// Do not add new properties here, use `useDispatch` instead to avoid\n\t// leaking new props to the public API (editor.BlockListBlock filter).\n\treturn {\n\t\tsetAttributes( newAttributes ) {\n\t\t\tconst { getMultiSelectedBlockClientIds } =\n\t\t\t\tregistry.select( blockEditorStore );\n\t\t\tconst multiSelectedBlockClientIds =\n\t\t\t\tgetMultiSelectedBlockClientIds();\n\t\t\tconst { clientId } = ownProps;\n\t\t\tconst clientIds = multiSelectedBlockClientIds.length\n\t\t\t\t? multiSelectedBlockClientIds\n\t\t\t\t: [ clientId ];\n\n\t\t\tupdateBlockAttributes( clientIds, newAttributes );\n\t\t},\n\t\tonInsertBlocks( blocks, index ) {\n\t\t\tconst { rootClientId } = ownProps;\n\t\t\tinsertBlocks( blocks, index, rootClientId );\n\t\t},\n\t\tonInsertBlocksAfter( blocks ) {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst { getBlockIndex } = registry.select( blockEditorStore );\n\t\t\tconst index = getBlockIndex( clientId );\n\t\t\tinsertBlocks( blocks, index + 1, rootClientId );\n\t\t},\n\t\tonMerge( forward ) {\n\t\t\tconst { clientId, rootClientId } = ownProps;\n\t\t\tconst {\n\t\t\t\tgetPreviousBlockClientId,\n\t\t\t\tgetNextBlockClientId,\n\t\t\t\tgetBlock,\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tgetBlockName,\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tcanInsertBlockType,\n\t\t\t} = registry.select( blockEditorStore );\n\n\t\t\tfunction switchToDefaultOrRemove() {\n\t\t\t\tconst block = getBlock( clientId );\n\t\t\t\tconst defaultBlockName = getDefaultBlockName();\n\t\t\t\tconst defaultBlockType = getBlockType( defaultBlockName );\n\t\t\t\tif ( getBlockName( clientId ) !== defaultBlockName ) {\n\t\t\t\t\tconst replacement = switchToBlockType(\n\t\t\t\t\t\tblock,\n\t\t\t\t\t\tdefaultBlockName\n\t\t\t\t\t);\n\t\t\t\t\tif ( replacement && replacement.length ) {\n\t\t\t\t\t\treplaceBlocks( clientId, replacement );\n\t\t\t\t\t}\n\t\t\t\t} else if ( isUnmodifiedDefaultBlock( block ) ) {\n\t\t\t\t\tconst nextBlockClientId = getNextBlockClientId( clientId );\n\t\t\t\t\tif ( nextBlockClientId ) {\n\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\tremoveBlock( clientId );\n\t\t\t\t\t\t\tselectBlock( nextBlockClientId );\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} else if ( defaultBlockType.merge ) {\n\t\t\t\t\tconst attributes = defaultBlockType.merge(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tblock.attributes\n\t\t\t\t\t);\n\t\t\t\t\treplaceBlocks(\n\t\t\t\t\t\t[ clientId ],\n\t\t\t\t\t\t[ createBlock( defaultBlockName, attributes ) ]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Moves the block with clientId up one level. If the block type\n\t\t\t * cannot be inserted at the new location, it will be attempted to\n\t\t\t * convert to the default block type.\n\t\t\t *\n\t\t\t * @param {string}  _clientId       The block to move.\n\t\t\t * @param {boolean} changeSelection Whether to change the selection\n\t\t\t *                                  to the moved block.\n\t\t\t */\n\t\t\tfunction moveFirstItemUp( _clientId, changeSelection = true ) {\n\t\t\t\tconst wrapperBlockName = getBlockName( _clientId );\n\t\t\t\tconst wrapperBlockType = getBlockType( wrapperBlockName );\n\t\t\t\tconst isTextualWrapper = wrapperBlockType.category === 'text';\n\t\t\t\tconst targetRootClientId = getBlockRootClientId( _clientId );\n\t\t\t\tconst blockOrder = getBlockOrder( _clientId );\n\t\t\t\tconst [ firstClientId ] = blockOrder;\n\n\t\t\t\tif (\n\t\t\t\t\tblockOrder.length === 1 &&\n\t\t\t\t\tisUnmodifiedBlock( getBlock( firstClientId ) )\n\t\t\t\t) {\n\t\t\t\t\tremoveBlock( _clientId );\n\t\t\t\t} else if ( isTextualWrapper ) {\n\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\t\t\tgetBlockName( firstClientId ),\n\t\t\t\t\t\t\t\ttargetRootClientId\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t[ firstClientId ],\n\t\t\t\t\t\t\t\t_clientId,\n\t\t\t\t\t\t\t\ttargetRootClientId,\n\t\t\t\t\t\t\t\tgetBlockIndex( _clientId )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst replacement = switchToBlockType(\n\t\t\t\t\t\t\t\tgetBlock( firstClientId ),\n\t\t\t\t\t\t\t\tgetDefaultBlockName()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\treplacement &&\n\t\t\t\t\t\t\t\treplacement.length &&\n\t\t\t\t\t\t\t\treplacement.every( ( block ) =>\n\t\t\t\t\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\t\t\t\t\tblock.name,\n\t\t\t\t\t\t\t\t\t\ttargetRootClientId\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tinsertBlocks(\n\t\t\t\t\t\t\t\t\treplacement,\n\t\t\t\t\t\t\t\t\tgetBlockIndex( _clientId ),\n\t\t\t\t\t\t\t\t\ttargetRootClientId,\n\t\t\t\t\t\t\t\t\tchangeSelection\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tremoveBlock( firstClientId, false );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t! getBlockOrder( _clientId ).length &&\n\t\t\t\t\t\t\tisUnmodifiedBlock( getBlock( _clientId ) )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveBlock( _clientId, false );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `Delete` or forward merge, we should do the exact same thing\n\t\t\t// as `Backspace`, but from the other block.\n\t\t\tif ( forward ) {\n\t\t\t\tif ( rootClientId ) {\n\t\t\t\t\tconst nextRootClientId =\n\t\t\t\t\t\tgetNextBlockClientId( rootClientId );\n\n\t\t\t\t\tif ( nextRootClientId ) {\n\t\t\t\t\t\t// If there is a block that follows with the same parent\n\t\t\t\t\t\t// block name and the same attributes, merge the inner\n\t\t\t\t\t\t// blocks.\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tgetBlockName( rootClientId ) ===\n\t\t\t\t\t\t\tgetBlockName( nextRootClientId )\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst rootAttributes =\n\t\t\t\t\t\t\t\tgetBlockAttributes( rootClientId );\n\t\t\t\t\t\t\tconst previousRootAttributes =\n\t\t\t\t\t\t\t\tgetBlockAttributes( nextRootClientId );\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tObject.keys( rootAttributes ).every(\n\t\t\t\t\t\t\t\t\t( key ) =>\n\t\t\t\t\t\t\t\t\t\trootAttributes[ key ] ===\n\t\t\t\t\t\t\t\t\t\tpreviousRootAttributes[ key ]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t\t\tgetBlockOrder( nextRootClientId ),\n\t\t\t\t\t\t\t\t\t\tnextRootClientId,\n\t\t\t\t\t\t\t\t\t\trootClientId\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tremoveBlock( nextRootClientId, false );\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmergeBlocks( rootClientId, nextRootClientId );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst nextBlockClientId = getNextBlockClientId( clientId );\n\n\t\t\t\tif ( ! nextBlockClientId ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( getBlockOrder( nextBlockClientId ).length ) {\n\t\t\t\t\tmoveFirstItemUp( nextBlockClientId, false );\n\t\t\t\t} else {\n\t\t\t\t\tmergeBlocks( clientId, nextBlockClientId );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst previousBlockClientId =\n\t\t\t\t\tgetPreviousBlockClientId( clientId );\n\n\t\t\t\tif ( previousBlockClientId ) {\n\t\t\t\t\tmergeBlocks( previousBlockClientId, clientId );\n\t\t\t\t} else if ( rootClientId ) {\n\t\t\t\t\tconst previousRootClientId =\n\t\t\t\t\t\tgetPreviousBlockClientId( rootClientId );\n\n\t\t\t\t\t// If there is a preceding block with the same parent block\n\t\t\t\t\t// name and the same attributes, merge the inner blocks.\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviousRootClientId &&\n\t\t\t\t\t\tgetBlockName( rootClientId ) ===\n\t\t\t\t\t\t\tgetBlockName( previousRootClientId )\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst rootAttributes =\n\t\t\t\t\t\t\tgetBlockAttributes( rootClientId );\n\t\t\t\t\t\tconst previousRootAttributes =\n\t\t\t\t\t\t\tgetBlockAttributes( previousRootClientId );\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.keys( rootAttributes ).every(\n\t\t\t\t\t\t\t\t( key ) =>\n\t\t\t\t\t\t\t\t\trootAttributes[ key ] ===\n\t\t\t\t\t\t\t\t\tpreviousRootAttributes[ key ]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\tmoveBlocksToPosition(\n\t\t\t\t\t\t\t\t\tgetBlockOrder( rootClientId ),\n\t\t\t\t\t\t\t\t\trootClientId,\n\t\t\t\t\t\t\t\t\tpreviousRootClientId\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tremoveBlock( rootClientId, false );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmoveFirstItemUp( rootClientId );\n\t\t\t\t} else {\n\t\t\t\t\tswitchToDefaultOrRemove();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonReplace( blocks, indexToSelect, initialPosition ) {\n\t\t\tif (\n\t\t\t\tblocks.length &&\n\t\t\t\t! isUnmodifiedDefaultBlock( blocks[ blocks.length - 1 ] )\n\t\t\t) {\n\t\t\t\t__unstableMarkLastChangeAsPersistent();\n\t\t\t}\n\t\t\t//Unsynced patterns are nested in an array so we need to flatten them.\n\t\t\tconst replacementBlocks =\n\t\t\t\tblocks?.length === 1 && Array.isArray( blocks[ 0 ] )\n\t\t\t\t\t? blocks[ 0 ]\n\t\t\t\t\t: blocks;\n\t\t\treplaceBlocks(\n\t\t\t\t[ ownProps.clientId ],\n\t\t\t\treplacementBlocks,\n\t\t\t\tindexToSelect,\n\t\t\t\tinitialPosition\n\t\t\t);\n\t\t},\n\t\tonRemove() {\n\t\t\tremoveBlock( ownProps.clientId );\n\t\t},\n\t\ttoggleSelection( selectionEnabled ) {\n\t\t\ttoggleSelection( selectionEnabled );\n\t\t},\n\t};\n} );\n\n// This component is used by the BlockListBlockProvider component below. It will\n// add the props necessary for the `editor.BlockListBlock` filters.\nBlockListBlock = compose(\n\tapplyWithDispatch,\n\twithFilters( 'editor.BlockListBlock' )\n)( BlockListBlock );\n\n// This component provides all the information we need through a single store\n// subscription (useSelect mapping). Only the necessary props are passed down\n// to the BlockListBlock component, which is a filtered component, so these\n// props are public API. To avoid adding to the public API, we use a private\n// context to pass the rest of the information to the filtered BlockListBlock\n// component, and useBlockProps.\nfunction BlockListBlockProvider( props ) {\n\tconst { clientId, rootClientId } = props;\n\tconst selectedProps = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisBlockSelected,\n\t\t\t\tgetBlockMode,\n\t\t\t\tisSelectionEnabled,\n\t\t\t\tgetTemplateLock,\n\t\t\t\tisSectionBlock: _isSectionBlock,\n\t\t\t\tgetBlockWithoutAttributes,\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tcanRemoveBlock,\n\t\t\t\tcanMoveBlock,\n\n\t\t\t\tgetSettings,\n\t\t\t\tgetTemporarilyEditingAsBlocks,\n\t\t\t\tgetBlockEditingMode,\n\t\t\t\tgetBlockName,\n\t\t\t\tisFirstMultiSelectedBlock,\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tgetBlocksByName,\n\n\t\t\t\tgetBlockIndex,\n\t\t\t\tisBlockMultiSelected,\n\t\t\t\tisBlockSubtreeDisabled,\n\t\t\t\tisBlockHighlighted,\n\t\t\t\t__unstableIsFullySelected,\n\t\t\t\t__unstableSelectionHasUnmergeableBlock,\n\t\t\t\tisBlockBeingDragged,\n\t\t\t\tisDragging,\n\t\t\t\t__unstableHasActiveBlockOverlayActive,\n\t\t\t\tgetSelectedBlocksInitialCaretPosition,\n\t\t\t} = unlock( select( blockEditorStore ) );\n\t\t\tconst blockWithoutAttributes =\n\t\t\t\tgetBlockWithoutAttributes( clientId );\n\n\t\t\t// This is a temporary fix.\n\t\t\t// This function should never be called when a block is not\n\t\t\t// present in the state. It happens now because the order in\n\t\t\t// withSelect rendering is not correct.\n\t\t\tif ( ! blockWithoutAttributes ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\thasBlockSupport: _hasBlockSupport,\n\t\t\t\tgetActiveBlockVariation,\n\t\t\t} = select( blocksStore );\n\t\t\tconst attributes = getBlockAttributes( clientId );\n\t\t\tconst { name: blockName, isValid } = blockWithoutAttributes;\n\t\t\tconst blockType = getBlockType( blockName );\n\t\t\tconst { supportsLayout, isPreviewMode } = getSettings();\n\t\t\tconst hasLightBlockWrapper = blockType?.apiVersion > 1;\n\t\t\tconst previewContext = {\n\t\t\t\tisPreviewMode,\n\t\t\t\tblockWithoutAttributes,\n\t\t\t\tname: blockName,\n\t\t\t\tattributes,\n\t\t\t\tisValid,\n\t\t\t\tthemeSupportsLayout: supportsLayout,\n\t\t\t\tindex: getBlockIndex( clientId ),\n\t\t\t\tisReusable: isReusableBlock( blockType ),\n\t\t\t\tclassName: hasLightBlockWrapper\n\t\t\t\t\t? attributes.className\n\t\t\t\t\t: undefined,\n\t\t\t\tdefaultClassName: hasLightBlockWrapper\n\t\t\t\t\t? getBlockDefaultClassName( blockName )\n\t\t\t\t\t: undefined,\n\t\t\t\tblockTitle: blockType?.title,\n\t\t\t};\n\n\t\t\t// When in preview mode, we can avoid a lot of selection and\n\t\t\t// editing related selectors.\n\t\t\tif ( isPreviewMode ) {\n\t\t\t\treturn previewContext;\n\t\t\t}\n\n\t\t\tconst _isSelected = isBlockSelected( clientId );\n\t\t\tconst canRemove = canRemoveBlock( clientId );\n\t\t\tconst canMove = canMoveBlock( clientId );\n\t\t\tconst match = getActiveBlockVariation( blockName, attributes );\n\t\t\tconst isMultiSelected = isBlockMultiSelected( clientId );\n\t\t\tconst checkDeep = true;\n\t\t\tconst isAncestorOfSelectedBlock = hasSelectedInnerBlock(\n\t\t\t\tclientId,\n\t\t\t\tcheckDeep\n\t\t\t);\n\t\t\tconst blockEditingMode = getBlockEditingMode( clientId );\n\n\t\t\tconst multiple = hasBlockSupport( blockName, 'multiple', true );\n\n\t\t\t// For block types with `multiple` support, there is no \"original\n\t\t\t// block\" to be found in the content, as the block itself is valid.\n\t\t\tconst blocksWithSameName = multiple\n\t\t\t\t? []\n\t\t\t\t: getBlocksByName( blockName );\n\t\t\tconst isInvalid =\n\t\t\t\tblocksWithSameName.length &&\n\t\t\t\tblocksWithSameName[ 0 ] !== clientId;\n\n\t\t\treturn {\n\t\t\t\t...previewContext,\n\t\t\t\tmode: getBlockMode( clientId ),\n\t\t\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\t\t\tisLocked: !! getTemplateLock( rootClientId ),\n\t\t\t\tisSectionBlock: _isSectionBlock( clientId ),\n\t\t\t\tcanRemove,\n\t\t\t\tcanMove,\n\t\t\t\tisSelected: _isSelected,\n\t\t\t\tisTemporarilyEditingAsBlocks:\n\t\t\t\t\tgetTemporarilyEditingAsBlocks() === clientId,\n\t\t\t\tblockEditingMode,\n\t\t\t\tmayDisplayControls:\n\t\t\t\t\t_isSelected ||\n\t\t\t\t\t( isFirstMultiSelectedBlock( clientId ) &&\n\t\t\t\t\t\tgetMultiSelectedBlockClientIds().every(\n\t\t\t\t\t\t\t( id ) => getBlockName( id ) === blockName\n\t\t\t\t\t\t) ),\n\t\t\t\tmayDisplayParentControls:\n\t\t\t\t\t_hasBlockSupport(\n\t\t\t\t\t\tgetBlockName( clientId ),\n\t\t\t\t\t\t'__experimentalExposeControlsToChildren',\n\t\t\t\t\t\tfalse\n\t\t\t\t\t) && hasSelectedInnerBlock( clientId ),\n\t\t\t\tblockApiVersion: blockType?.apiVersion || 1,\n\t\t\t\tblockTitle: match?.title || blockType?.title,\n\t\t\t\tisSubtreeDisabled:\n\t\t\t\t\tblockEditingMode === 'disabled' &&\n\t\t\t\t\tisBlockSubtreeDisabled( clientId ),\n\t\t\t\thasOverlay:\n\t\t\t\t\t__unstableHasActiveBlockOverlayActive( clientId ) &&\n\t\t\t\t\t! isDragging(),\n\t\t\t\tinitialPosition: _isSelected\n\t\t\t\t\t? getSelectedBlocksInitialCaretPosition()\n\t\t\t\t\t: undefined,\n\t\t\t\tisHighlighted: isBlockHighlighted( clientId ),\n\t\t\t\tisMultiSelected,\n\t\t\t\tisPartiallySelected:\n\t\t\t\t\tisMultiSelected &&\n\t\t\t\t\t! __unstableIsFullySelected() &&\n\t\t\t\t\t! __unstableSelectionHasUnmergeableBlock(),\n\t\t\t\tisDragging: isBlockBeingDragged( clientId ),\n\t\t\t\thasChildSelected: isAncestorOfSelectedBlock,\n\t\t\t\tisEditingDisabled: blockEditingMode === 'disabled',\n\t\t\t\thasEditableOutline:\n\t\t\t\t\tblockEditingMode !== 'disabled' &&\n\t\t\t\t\tgetBlockEditingMode( rootClientId ) === 'disabled',\n\t\t\t\toriginalBlockClientId: isInvalid\n\t\t\t\t\t? blocksWithSameName[ 0 ]\n\t\t\t\t\t: false,\n\t\t\t};\n\t\t},\n\t\t[ clientId, rootClientId ]\n\t);\n\n\tconst {\n\t\tisPreviewMode,\n\t\t// Fill values that end up as a public API and may not be defined in\n\t\t// preview mode.\n\t\tmode = 'visual',\n\t\tisSelectionEnabled = false,\n\t\tisLocked = false,\n\t\tcanRemove = false,\n\t\tcanMove = false,\n\t\tblockWithoutAttributes,\n\t\tname,\n\t\tattributes,\n\t\tisValid,\n\t\tisSelected = false,\n\t\tthemeSupportsLayout,\n\t\tisTemporarilyEditingAsBlocks,\n\t\tblockEditingMode,\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\tindex,\n\t\tblockApiVersion,\n\t\tblockTitle,\n\t\tisSubtreeDisabled,\n\t\thasOverlay,\n\t\tinitialPosition,\n\t\tisHighlighted,\n\t\tisMultiSelected,\n\t\tisPartiallySelected,\n\t\tisReusable,\n\t\tisDragging,\n\t\thasChildSelected,\n\t\tisSectionBlock,\n\t\tisEditingDisabled,\n\t\thasEditableOutline,\n\t\tclassName,\n\t\tdefaultClassName,\n\t\toriginalBlockClientId,\n\t} = selectedProps;\n\n\t// Users of the editor.BlockListBlock filter used to be able to\n\t// access the block prop.\n\t// Ideally these blocks would rely on the clientId prop only.\n\t// This is kept for backward compatibility reasons.\n\tconst block = useMemo(\n\t\t() => ( { ...blockWithoutAttributes, attributes } ),\n\t\t[ blockWithoutAttributes, attributes ]\n\t);\n\n\t// Block is sometimes not mounted at the right time, causing it be\n\t// undefined see issue for more info\n\t// https://github.com/WordPress/gutenberg/issues/17013\n\tif ( ! selectedProps ) {\n\t\treturn null;\n\t}\n\n\tconst privateContext = {\n\t\tisPreviewMode,\n\t\tclientId,\n\t\tclassName,\n\t\tindex,\n\t\tmode,\n\t\tname,\n\t\tblockApiVersion,\n\t\tblockTitle,\n\t\tisSelected,\n\t\tisSubtreeDisabled,\n\t\thasOverlay,\n\t\tinitialPosition,\n\t\tblockEditingMode,\n\t\tisHighlighted,\n\t\tisMultiSelected,\n\t\tisPartiallySelected,\n\t\tisReusable,\n\t\tisDragging,\n\t\thasChildSelected,\n\t\tisSectionBlock,\n\t\tisEditingDisabled,\n\t\thasEditableOutline,\n\t\tisTemporarilyEditingAsBlocks,\n\t\tdefaultClassName,\n\t\tmayDisplayControls,\n\t\tmayDisplayParentControls,\n\t\toriginalBlockClientId,\n\t\tthemeSupportsLayout,\n\t\tcanMove,\n\t};\n\n\t// Here we separate between the props passed to BlockListBlock and any other\n\t// information we selected for internal use. BlockListBlock is a filtered\n\t// component and thus ALL the props are PUBLIC API.\n\n\t// Note that the context value doesn't have to be memoized in this case\n\t// because when it changes, this component will be re-rendered anyway, and\n\t// none of the consumers (BlockListBlock and useBlockProps) are memoized or\n\t// \"pure\". This is different from the public BlockEditContext, where\n\t// consumers might be memoized or \"pure\".\n\treturn (\n\t\t<PrivateBlockContext.Provider value={ privateContext }>\n\t\t\t<BlockListBlock\n\t\t\t\t{ ...props }\n\t\t\t\t// WARNING: all the following props are public API (through the\n\t\t\t\t// editor.BlockListBlock filter) and normally nothing new should\n\t\t\t\t// be added to it.\n\t\t\t\t{ ...{\n\t\t\t\t\tmode,\n\t\t\t\t\tisSelectionEnabled,\n\t\t\t\t\tisLocked,\n\t\t\t\t\tcanRemove,\n\t\t\t\t\tcanMove,\n\t\t\t\t\t// Users of the editor.BlockListBlock filter used to be able\n\t\t\t\t\t// to access the block prop. Ideally these blocks would rely\n\t\t\t\t\t// on the clientId prop only. This is kept for backward\n\t\t\t\t\t// compatibility reasons.\n\t\t\t\t\tblock,\n\t\t\t\t\tname,\n\t\t\t\t\tattributes,\n\t\t\t\t\tisValid,\n\t\t\t\t\tisSelected,\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PrivateBlockContext.Provider>\n\t);\n}\n\nexport default memo( BlockListBlockProvider );\n"],"mappings":"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","ignoreList":[]}